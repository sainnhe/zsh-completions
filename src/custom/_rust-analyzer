#compdef rust-analyzer

# zsh completions for 'rust-analyzer'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {-v,--verbose}'[verbosity level, can be repeated multiple times.]'
  {-q,--quiet}'[verbosity level.]'
  '--log-file[log to the specified file instead of stderr.]'
  '--no-log-buffering[flush log records to the file immediately.]'
  '--wait-dbg[\[Unstable\] Wait until a debugger is attached to (requires debug build).]'
  {-h,--help}'[prints help information.]'
  {-V,--version}'[print version.]'
  '--print-config-schema[dump a LSP config JSON schema.]'
  '--no-dump[suppress printing.]'
  '--rainbow[enable rainbow highlighting of identifiers.]'
  '--output[]'
  '--randomize[randomize order in which crates, modules, and items are processed.]'
  '--parallel[run type inference in parallel.]'
  {-o,--only}'[only analyze items matching this path.]'
  '--with-deps[also analyze all dependencies.]'
  '--no-sysroot[dont load sysroot crates (`std`, `core` & friends).]'
  '--no-test[dont set #\[cfg(test)\].]'
  '--disable-build-scripts[dont run build scripts or load `OUT_DIR` values by running `cargo check` before analysis.]'
  '--disable-proc-macros[dont use expand proc macros.]'
  '--proc-macro-srv[run the proc-macro-srv binary at the specified path.]'
  '--skip-lowering[skip body lowering.]'
  '--skip-inference[skip type inference.]'
  '--skip-mir-stats[skip lowering to mir]'
  '--skip-data-layout[skip data layout calculation]'
  '--skip-const-eval[skip const evaluation]'
  '--run-all-ide-things[runs several IDE features after analysis, including semantics highlighting, diagnostics]'
  '--run-term-search[run term search on all the tail expressions (of functions, block, if statements etc.)]'
  '--validate-term-search[validate term search by running `cargo check` on every response.]'
  '--filter[only run tests with filter as substring]'
  '--disable-build-scripts[dont run build scripts or load `OUT_DIR` values by running `cargo check` before analysis.]'
  '--disable-proc-macros[dont use expand proc macros.]'
  '--proc-macro-srv[run the proc-macro-srv binary at the specified path.]'
  '--disable-build-scripts[dont run build scripts or load `OUT_DIR` values by running `cargo check` before analysis.]'
  '--disable-proc-macros[dont use expand proc macros.]'
  '--proc-macro-srv[run the proc-macro-srv binary at the specified path.]'
  '--debug[prints debug information for any nodes with source exactly equal to snippet.]'
  '--exclude-vendored-libraries[exclude code from vendored libraries from the resulting index.]'
  '--output[the output path where the SCIP file will be written to. Defaults to `index.scip`.]'
  '--config-path[A path to an json configuration file that can be used to customize cargo behavior.]'
  '--exclude-vendored-libraries[exclude code from vendored libraries from the resulting index.]'
  '*:filename:_files'
)

_arguments -s $arguments
