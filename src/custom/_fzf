#compdef fzf

# zsh completions for 'fzf'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {-e,--exact}'[enable exact-match]'
  {-i,--ignore-case}'[case-insensitive match]'
  '--smart-case[smart-case match (default)]'
  '--scheme[scoring scheme \[default|path|history\]]'
  {-n,--nth}'[..\]         Comma-separated list of field index expressions]'
  '--with-nth[..\]        Transform the presentation of each line using]'
  '--accept-nth[..\]      Define which fields to print on accept]'
  {-d,--delimiter}'[field delimiter regex (default: AWK-style)]'
  '--literal[do not normalize latin script letters]'
  '--tail[maximum number of items to keep in memory]'
  '--disabled[do not perform search]'
  '--tiebreak[..\]      Comma-separated list of sort criteria to apply]'
  '--read0[read input delimited by ASCII NUL characters]'
  '--print0[print output delimited by ASCII NUL characters]'
  '--ansi[enable processing of ANSI color codes]'
  '--sync[synchronous search for multi-staged filtering]'
  '--style[apply a style preset \[default|minimal|full\[:BORDER_STYLE\]]'
  '--color[base scheme (dark|light|16|bw) and/or custom colors]'
  '--no-color[disable colors]'
  '--no-bold[do not use bold text]'
  '--height[~\]HEIGHT\[%\]    Display fzf window below the cursor with the given]'
  '--min-height[+\]   Minimum height when --height is given as a percentage.]'
  '--tmux[start fzf in a tmux popup (requires tmux 3.3+)]'
  '--layout[choose layout: \[default|reverse|reverse-list\]]'
  '--margin[screen margin (TRBL | TB,RL | T,RL,B | T,R,B,L)]'
  '--padding[padding inside border (TRBL | TB,RL | T,RL,B | T,R,B,L)]'
  '--border[draw border around the finder]'
  '--border-label[label to print on the border]'
  '--border-label-pos[position of the border label]'
  {-m,--multi}'[enable multi-select with tab/shift-tab]'
  '--highlight-line[highlight the whole current line]'
  '--cycle[enable cyclic scroll]'
  '--wrap[enable line wrap]'
  '--wrap-sign[indicator for wrapped lines]'
  '--no-multi-line[disable multi-line display of items when using --read0]'
  '--track[track the current selection when the result is updated]'
  '--tac[reverse the order of the input]'
  '--gap[render empty lines between each item]'
  '--gap-line[draw horizontal line on each gap using the string]'
  '--keep-right[keep the right end of the line visible on overflow]'
  '--scroll-off[number of screen lines to keep above or below when]'
  '--no-hscroll[disable horizontal scroll]'
  '--hscroll-off[number of screen columns to keep to the right of the]'
  '--jump-labels[label characters for jump mode]'
  '--pointer[pointer to the current line (default: ▌ or >)]'
  '--marker[multi-select marker (default: ┃ or >)]'
  '--marker-multi-line[multi-select marker for multi-line entries;]'
  '--ellipsis[ellipsis to show when line is truncated (default: ··)]'
  '--tabstop[number of spaces for a tab character (default: 8)]'
  '--scrollbar[1\[C2\]\]     Scrollbar character(s)]'
  '--no-scrollbar[hide scrollbar]'
  '--list-border[draw border around the list section]'
  '--list-label[label to print on the list border]'
  '--list-label-pos[position of the list label]'
  '--no-input[disable and hide the input section]'
  '--prompt[input prompt (default: > )]'
  '--info[finder info style]'
  '--info-command[command to generate info line]'
  '--separator[draw horizontal separator on info line using the string]'
  '--no-separator[hide info line separator]'
  '--ghost[ghost text to display when the input is empty]'
  '--filepath-word[make word-wise movements respect path separators]'
  '--input-border[draw border around the input section]'
  '--input-label[label to print on the input border]'
  '--input-label-pos[position of the input label]'
  '--preview[command to preview highlighted line ({})]'
  '--preview-window[preview window layout (default: right:50%)]'
  '--preview-border[short for --preview-window=border-STYLE]'
  '--preview-label[]'
  '--preview-label-pos[same as --border-label and --border-label-pos]'
  '--header[string to print as header]'
  '--header-lines[the first N lines of the input are treated as header]'
  '--header-first[print header before the prompt line]'
  '--header-border[draw border around the header section]'
  '--header-lines-border[display header from --header-lines with a separate border.]'
  '--header-label[label to print on the header border]'
  '--header-label-pos[position of the header label]'
  {-q,--query}'[start the finder with the given query]'
  {-1,--select-1}'[automatically select the only match]'
  {-0,--exit-0}'[exit immediately when theres no match]'
  {-f,--filter}'[print matches for the initial query and exit]'
  '--print-query[print query as the first line]'
  '--expect[comma-separated list of keys to complete fzf]'
  '--bind[custom key/event bindings]'
  '--with-shell[shell command and flags to start child processes with]'
  '--listen[start HTTP server to receive actions (POST /)]'
  '--walker[\[file\]\[,dir\]\[,follow\]\[,hidden\] (default: file,follow,hidden)]'
  '--walker-root[\[...\]  List of directories to walk (default: .)]'
  '--walker-skip[comma-separated list of directory names to skip]'
  '--history[history file]'
  '--history-size[maximum number of history entries (default: 1000)]'
  '--bash[print script to set up Bash shell integration]'
  '--zsh[print script to set up Zsh shell integration]'
  '--fish[print script to set up Fish shell integration]'
  '--version[display version information and exit]'
  '--help[show this message]'
  '--man[show man page]'
  '*:filename:_files'
)

_arguments -s $arguments
